{"version":3,"sources":["potion-gen/update.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["hash","require","faker","data","console","log","originalDataSet","Array","prototype","unique","Set","this","average","reduce","p","c","length","String","capitalize","charAt","toUpperCase","slice","randomElement","Math","floor","random","number","generateColour","r","g","b","a","toFixed","options","minimumCommonEffects","maxComponents","ratings","effects","substanceProperties","productionRequirements","defaults","baseData","Component","name","colour","properties","map","e","ingredientName","active","complexity","id","add","PotionMaster","seed","args","components","i","makeDataSet","searchQuery","find","componentObject","dupe","findComponent","n","push","ingredientObjects","max","updateComplexity","effectArray","effectsAdvanced","flat","forEach","s","effect","array","count","filter","productionModifiers","conditions","hasNoProductionRequirements","production","includesProduction","includes","usingPhilosophersStone","Object","keys","some","percent","index","round","item","presentEffects","thisEffectCollection","assign","magnitude","strength","strengthFinder","maxMagnitude","customJunkName","potionName","activeEffects","inactiveEffects","strongestEffect","prev","current","concat","substanceProperty","sort","newPotion","min","apply","ingredientNames","m","findCommonEffects","validateEffects","calculateEffectPotency","finalisePotion","registerComponent","generationMemory","addProductionRequirements","addSubstanceProperties","addColour","ingredients","ingredient","originalName","pm","App","className","src","logo","alt","href","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6667db6e.chunk.js","sourcesContent":["/* eslint react/prop-types: 0 */\n\n\nvar hash = require('object-hash');\nvar faker = require('faker');\n\nvar data = require('./caco-ingredients.json');\n\nconsole.log(data)\n\n\n\n\n// var originalDataSet = JSON.parse(data)\nvar originalDataSet =  data;\n// eslint-disable-next-line\nArray.prototype.unique = function() { return [...new Set(this)] }\n// eslint-disable-next-line\nArray.prototype.average = function() { return this.reduce((p, c) => p + c, 0) / this.length }\n// eslint-disable-next-line\nString.prototype.capitalize = function() { return this.charAt(0).toUpperCase() + this.slice(1) }\n// eslint-disable-next-line\nArray.prototype.randomElement = function() { return this[Math.floor(random() * this.length)] }\n\nvar random = () => faker.random.number() / 100000\n\nvar generateColour = () => ({\n    r: Math.floor(random() * Math.floor(255)),\n    g: Math.floor(random() * Math.floor(255)),\n    b: Math.floor(random() * Math.floor(255)),\n    a: +random().toFixed(2)\n})\n\n\nvar options = {\n    minimumCommonEffects: 2,\n    // complexityBooster: 1\n    maxComponents: 4,\n    ratings: [\"very weak\",\n        \"weak\",\n        \"mid-strength\",\n        \"potent\",\n        \"strong\",\n        \"very strong\",\n        \"perfect\"\n    ]\n\n}\n\n\n\n\n\n\n\n\nvar effects = [{\n        \"name\": \"Explosive\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Destruction\"\n    },\n    {\n        \"name\": \"Berserk for x period\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Restoration\"\n    },\n    {\n        \"name\": \"Madness\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Illusion\"\n    },\n    {\n        \"name\": \"Obsession for x period\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Unarmed\"\n    },\n    {\n        \"name\": \"Charm target x for y period\",\n        \"complexity\": 2,\n        \"originalName\": \"Fortify Barter\"\n    },\n    {\n        \"name\": \"Teleport/move location to x\",\n        \"complexity\": 4,\n        \"originalName\": \"Fortify Shouts\"\n    },\n    {\n        \"name\": \"Queasiness\",\n        \"complexity\": 1,\n        \"originalName\": \"Health\"\n    },\n    {\n        \"name\": \"Sadness for x period\",\n        \"complexity\": 1,\n        \"originalName\": \"Magicka\"\n    },\n    {\n        \"name\": \"Multiply duration of other effects of potion\",\n        \"complexity\": 3,\n        \"originalName\": \"Health Fortification\"\n    },\n    {\n        \"name\": \"Multiply magnitude of other effects of potion\",\n        \"complexity\": 3,\n        \"originalName\": \"Stamina Fortification\"\n    },\n    {\n        \"name\": \"Flip other effects of potion\",\n        \"complexity\": 3,\n        \"originalName\": \"Magicka Fortification\"\n    },\n    {\n        \"name\": \"Diarrhea\",\n        \"complexity\": 1,\n        \"originalName\": \"Magicka Regeneration\"\n    },\n    {\n        \"name\": \"Great Wound\",\n        \"complexity\": 3,\n        \"originalName\": \"Ravage Health\"\n    },\n    {\n        \"name\": \"Corruption\",\n        \"complexity\": 1,\n        \"originalName\": \"Damage Magicka\"\n    },\n    {\n        \"name\": \"Gain Sin\",\n        \"complexity\": 3,\n        \"originalName\": \"Damage Magicka Regen\"\n    },\n    {\n        \"name\": \"Damage chaos and demons\",\n        \"complexity\": 3,\n        \"originalName\": \"Lingering Damage Undead\"\n    },\n    {\n        \"name\": \"Reduce mass\",\n        \"complexity\": 2,\n        \"originalName\": \"Drain Strength\"\n    },\n    {\n        \"name\": \"Grow\",\n        \"complexity\": 1,\n        \"originalName\": \"Drain Intelligence\"\n    },\n    {\n        \"name\": \"Increased magic resistance\",\n        \"complexity\": 2,\n        \"originalName\": \"Resist Magic\"\n    },\n    {\n        \"name\": \"Increased heat resistance\",\n        \"complexity\": 2,\n        \"originalName\": \"Resist Fire\"\n    },\n    {\n        \"name\": \"Increased cold resistance\",\n        \"complexity\": 2,\n        \"originalName\": \"Resist Frost\"\n    },\n    {\n        \"name\": \"Increased chaos resistance\",\n        \"complexity\": 2,\n        \"originalName\": \"Resist Shock\"\n    },\n    {\n        \"name\": \"Transmute to x perminantly\",\n        \"complexity\": 4,\n        \"originalName\": \"Magic Aversion\"\n    },\n    {\n        \"name\": \"Gain mass\",\n        \"complexity\": 2,\n        \"originalName\": \"Fire Aversion\"\n    },\n    {\n        \"name\": \"Shrink\",\n        \"complexity\": 3,\n        \"originalName\": \"Frost Aversion\"\n    },\n    {\n        \"name\": \"Increase critical casting chance\",\n        \"complexity\": 3,\n        \"originalName\": \"Shock Aversion\"\n    },\n    {\n        \"name\": \"Polymorph inanimate substance to x for y period\",\n        \"complexity\": 3,\n        \"originalName\": \"Fire Damage\"\n    },\n    {\n        \"name\": \"Filling\",\n        \"complexity\": 1,\n        \"originalName\": \"Frost Damage\"\n    },\n    {\n        \"name\": \"Polymorph living thing to x for y period\",\n        \"complexity\": 3,\n        \"originalName\": \"Shock Damage\"\n    },\n    {\n        \"name\": \"Sleepless rest\",\n        \"complexity\": 1,\n        \"originalName\": \"Poison Aversion\"\n    },\n    {\n        \"name\": \"Move the caster x mins back in time\",\n        \"complexity\": 4,\n        \"originalName\": \"Light\"\n    },\n    {\n        \"name\": \"Gain luck\",\n        \"complexity\": 4,\n        \"originalName\": \"Etherialize\"\n    },\n    {\n        \"name\": \"See visions of location x (scry)\",\n        \"complexity\": 3,\n        \"originalName\": \"Detect Life Potion - Exterior\"\n    },\n    {\n        \"name\": \"Make inanimate living\",\n        \"complexity\": 4,\n        \"originalName\": \"Blood\"\n    },\n    {\n        \"name\": \"Increase time speed\",\n        \"complexity\": 3,\n        \"originalName\": \"Hunter's Boon\"\n    },\n    {\n        \"name\": \"Increase aging speed\",\n        \"complexity\": 4,\n        \"originalName\": \"Hircine's Sight\"\n    },\n    {\n        \"name\": \"Increase stealth\",\n        \"complexity\": 1,\n        \"originalName\": \"Prowling\"\n    },\n    {\n        \"name\": \"See real or fake visions of future\",\n        \"complexity\": 1,\n        \"originalName\": \"Thrill\"\n    },\n    {\n        \"name\": \"Cause hunger\",\n        \"complexity\": 1,\n        \"originalName\": \"Consumption\"\n    },\n    {\n        \"name\": \"Nothing\",\n        \"complexity\": 1,\n        \"originalName\": \"Exploit Weakness\"\n    },\n    {\n        \"name\": \"Increase Strength\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify One-Handed\"\n    },\n    {\n        \"name\": \"Increase Weapon Skill\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Two-Handed\"\n    },\n    {\n        \"name\": \"Increase Ballistic Skill\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Marksman\"\n    },\n    {\n        \"name\": \"Increase Resilience\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Block\"\n    },\n    {\n        \"name\": \"Increase Toughness\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Heavy Armor\"\n    },\n    {\n        \"name\": \"Increase Dexterity\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Sneak\"\n    },\n    {\n        \"name\": \"Increase Initiative\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Lockpicking\"\n    },\n    {\n        \"name\": \"Increase Agility\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Pickpocket\"\n    },\n    {\n        \"name\": \"Increase Fellowship\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Speech\"\n    },\n    {\n        \"name\": \"Powerful stimulent\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Light Armor\"\n    },\n    {\n        \"name\": \"Increase Wounds\",\n        \"complexity\": 2,\n        \"originalName\": \"Fortify Alteration\"\n    },\n    {\n        \"name\": \"Increase Willpower\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Conjuration\"\n    },\n    {\n        \"name\": \"Increase crafting\",\n        \"complexity\": 2,\n        \"originalName\": \"Fortify Smithing\"\n    },\n    {\n        \"name\": \"Increase Intelligence\",\n        \"complexity\": 1,\n        \"originalName\": \"Fortify Enchanting\"\n    },\n    {\n        \"name\": \"Increase Movement\",\n        \"complexity\": 2,\n        \"originalName\": \"Speed\"\n    },\n    {\n        \"name\": \"Restore vigor\",\n        \"complexity\": 1,\n        \"originalName\": \"Stamina\"\n    },\n    {\n        \"name\": \"Regeneration\",\n        \"complexity\": 2,\n        \"originalName\": \"Health Regeneration\"\n    },\n    {\n        \"name\": \"Stamina Regeneration\",\n        \"complexity\": 1,\n        \"originalName\": \"Stamina Regeneration\"\n    },\n    {\n        \"name\": \"Wound\",\n        \"complexity\": 1,\n        \"originalName\": \"Damage Health\"\n    },\n    {\n        \"name\": \"Cause infection\",\n        \"complexity\": 1,\n        \"originalName\": \"Damage Health Regen\"\n    },\n    {\n        \"name\": \"Disfigure\",\n        \"complexity\": 1,\n        \"originalName\": \"Lingering Damage Health\"\n    },\n    {\n        \"name\": \"Exhaust\",\n        \"complexity\": 1,\n        \"originalName\": \"Damage Stamina\"\n    },\n    {\n        \"name\": \"Cripple\",\n        \"complexity\": 1,\n        \"originalName\": \"Damage Stamina Regen\"\n    },\n    {\n        \"name\": \"Fatigue\",\n        \"complexity\": 1,\n        \"originalName\": \"Fatigue\"\n    },\n    {\n        \"name\": \"Silence\",\n        \"complexity\": 1,\n        \"originalName\": \"Silence\"\n    },\n    {\n        \"name\": \"Damage Undead\",\n        \"complexity\": 2,\n        \"originalName\": \"Damage Undead\"\n    },\n    {\n        \"name\": \"Grant fate token\",\n        \"complexity\": 4,\n        \"originalName\": \"Shield\"\n    },\n    {\n        \"name\": \"Resist Disease\",\n        \"complexity\": 1,\n        \"originalName\": \"Cure Disease\"\n    },\n    {\n        \"name\": \"Resist Infection\",\n        \"complexity\": 1,\n        \"originalName\": \"Resist Disease\"\n    },\n    {\n        \"name\": \"Resist Stat changes\",\n        \"complexity\": 2,\n        \"originalName\": \"Cure Poison\"\n    },\n    {\n        \"name\": \"Resist Poison\",\n        \"complexity\": 2,\n        \"originalName\": \"Resist Poison\"\n    },\n    {\n        \"name\": \"Paralysis\",\n        \"complexity\": 2,\n        \"originalName\": \"Paralysis\"\n    },\n    {\n        \"name\": \"Resist Paralysis\",\n        \"complexity\": 3,\n        \"originalName\": \"Resist Paralysis\"\n    },\n    {\n        \"name\": \"Slow\",\n        \"complexity\": 1,\n        \"originalName\": \"Slow\"\n    },\n    {\n        \"name\": \"Feather\",\n        \"complexity\": 3,\n        \"originalName\": \"Feather\"\n    },\n    {\n        \"name\": \"Invisibility\",\n        \"complexity\": 4,\n        \"originalName\": \"Invisibility\"\n    },\n    {\n        \"name\": \"Night Eye\",\n        \"complexity\": 3,\n        \"originalName\": \"Night Eye\"\n    },\n    {\n        \"name\": \"Detect Life\",\n        \"complexity\": 2,\n        \"originalName\": \"Detect Life\"\n    },\n    {\n        \"name\": \"Fear\",\n        \"complexity\": 1,\n        \"originalName\": \"Fear\"\n    },\n    {\n        \"name\": \"Frenzy\",\n        \"complexity\": 1,\n        \"originalName\": \"Frenzy\"\n    },\n    {\n        \"name\": \"Waterbreathing\",\n        \"complexity\": 1,\n        \"originalName\": \"Waterbreathing\"\n    },\n    {\n        \"name\": \"Waterwalking\",\n        \"complexity\": 3,\n        \"originalName\": \"Waterwalking\"\n    },\n    {\n        \"name\": \"Protect Soul\",\n        \"complexity\": 3,\n        \"originalName\": \"Protect Soul\"\n    },\n    {\n        \"name\": \"Chaotic effect\",\n        \"complexity\": 4,\n        \"originalName\": \"Discerning\"\n    },\n    {\n        \"name\": \"Vomiting\",\n        \"complexity\": 1,\n        \"originalName\": \"Pathfinding\"\n    },\n    {\n        \"name\": \"Ineptitude\",\n        \"complexity\": 1,\n        \"originalName\": \"Ineptitude\"\n    },\n    {\n        \"name\": \"Confuse\",\n        \"complexity\": 1,\n        \"originalName\": \"Muddle\"\n    }\n]\n\n\nvar substanceProperties = [\n    'Acidic',\n    'Basic',\n    'Damaged by acid',\n    'Damaged by base',\n    'Expires quickly',\n    'Exothermic',\n    'Thick potion',\n    'Thin potion',\n    'Endothermic',\n    'Flamible',\n    'Oxadising',\n    'Chaotic/mutative',\n    'Vulnrable to light or fire',\n    'Removes all other positive effects',\n    'Magnetic',\n    'Exomagic, never stops reacting',\n    'Endomagic, stops all weaker effects from working',\n]\n\n\n\n\nvar productionRequirements = [\n    \"Disolve in water\",\n    \"crunsh\",\n    \"grind\",\n    \"heat\",\n    \"chill\",\n    \"Shake in a silver vessel\",\n    \"stew for 3 nights\",\n    \"disolve in oil\",\n    \"disolve in acid\",\n    \"ferment for 1 session\",\n    \"boil\",\n    \"evaporating\",\n    \"freeze\",\n    \"requires the presence of chaos\",\n    \"stir under a full moon\",\n    'Distil',\n\n]\n\nvar defaults = {\n    baseData: originalDataSet,\n    effects: effects,\n    substanceProperties: substanceProperties,\n    productionRequirements: productionRequirements,\n    options: options,\n}\n\n\n\nclass Component {\n    constructor(name, effects, colour, properties) {\n        this.effects = effects.map(e => ({\n            ingredientName: name,\n            active: false,\n\n            ...e\n        }))\n        this.name = name\n        this.complexity = 1\n        this.properties = properties\n        this.id = hash(this)\n        this.colour = colour\n        // this.complexity\n    }\n    effectsAdvanced() {\n        return this.effects\n        // .map(e => )\n    }\n    effectsBasic() {\n        return this.effects.map(e => e.name)\n        // .map(e => ({ active: false, ...e }))\n    }\n\n    updateComplexity(add) {\n        if (add) this.complexity += add\n        return this.complexity\n    }\n}\n\n\n\nclass PotionMaster {\n    constructor(seed=Math.random(), args = defaults) {\n        faker.seed(seed)\n        this.data = args.baseData\n        this.options = args.options\n        this.data.effects = args.effects\n        this.data.components = []\n        this.data.substanceProperties = args.substanceProperties\n            .map(e => e.capitalize())\n        this.data.productionRequirements = args.productionRequirements\n            .map(i => i.capitalize())\n        return this.makeDataSet()\n    }\n\n    findComponent(searchQuery) {\n        return this.data.components.find(c => c === searchQuery || c.id === searchQuery || c.name === searchQuery)\n    }\n\n    registerComponent(componentObject) {\n        var dupe = this.findComponent(componentObject.id)\n        if (dupe) {\n            console.log(\"duplicate potion\")\n            return dupe\n        }\n        var n = this.data.components.push(componentObject)\n        return this.data.components[n - 1]\n    }\n\n\n\n\n    findCommonEffects(...ingredientObjects) {\n        console.log(\"running findCommonEffects\", ingredientObjects.length)\n\n\n        var complexity = Math.max(...ingredientObjects.map(i => i.updateComplexity()))\n\n        var effectArray = ingredientObjects\n            .map(i => i.effectsAdvanced())\n            .flat()\n\n        effectArray\n            .forEach((s, i, a) => a[i].active = false)\n\n        effectArray\n            .forEach((effect, i, array) => array[i].count = array\n                .filter(e => e.name === effect.name).length)\n\n\n        //activate effects\n        effectArray\n            .filter(e => e.count >= this.options.minimumCommonEffects)\n            .filter(e => e.complexity <= complexity)\n            .forEach((s, i, a) => a[i].active = true)\n\n        return effectArray\n    }\n\n    validateEffects(productionModifiers = [], effectArray) {\n        console.log(\"running validateEffects\",\n            \"productionModifiers\",\n            productionModifiers.length,\n            \"effectArray\",\n            effectArray.length)\n        // console.log(effectArray)\n        var conditions = {\n            hasNoProductionRequirements: (e) => !e.production,\n            includesProduction: (e) => productionModifiers.includes(e.production),\n            usingPhilosophersStone: (e) => productionModifiers.includes(\"philosophers stone\"),\n\n        }\n        // console.log(effectArray)\n\n        //vlidate prodction\n        // remove junk\n        //keep high level\n        return effectArray\n            //filter production mods\n            .filter((e, i, a) => Object.keys(conditions).some(b => conditions[b](e)))\n            // console.log(t)\n            .filter(e => e.active || e.complexity >= 3)\n    }\n\n    strengthFinder(percent) {\n        // console.log(\"LMAO\", this.options.ratings[Math.round(percent * this.options.ratings.length) - 1], Math.round(percent * this.options.ratings.length) - 1)\n        var index = Math.round(percent * this.options.ratings.length) - 1\n        if (index < 0) index = 0\n        return this.options.ratings[index].capitalize()\n    }\n\n\n    calculateEffectPotency(effectArray) {\n        console.log(\"running calculateEffectPotency\", effectArray.length)\n\n\n\n\n\n        effectArray.forEach((item) => {\n            delete item.ingredientName\n        })\n\n\n        var presentEffects = [...new Set(effectArray.map(e => e.name))]\n\n        presentEffects = presentEffects.map(effect => {\n                var thisEffectCollection = effectArray\n                    .filter(e => e.name === effect)\n                return Object.assign({}, ...thisEffectCollection, {\n                    magnitude: thisEffectCollection\n                        .map(e => e.magnitude)\n                        //this is voodoo\n                        .reduce((a, b) => a + b, 0)\n                })\n            })\n            .map(e => ({ ...e, strength: this.strengthFinder(e.magnitude / e.maxMagnitude) }))\n\n        //trim potion to remove excess effects\n        // if (presentEffects.length > 4) presentEffects = presentEffects.slice(0, 4)\n        return presentEffects\n    }\n\n    finalisePotion(presentEffects, customJunkName = \"Junk\") {\n        console.log(\"running finalisePotion\", presentEffects.length)\n        var potionName = \"Precursor Liquid\"\n        // var colour = Color(\"purple\")\n\n\n        var activeEffects = presentEffects.filter(e => e.active).slice(0, 3)\n        var inactiveEffects = presentEffects.filter(e => !e.active).slice(0, 3)\n\n\n\n        if ((activeEffects.length + inactiveEffects.length) < 1) return new Component(customJunkName,\n            [], generateColour, [\"Smells terrible\"])\n\n\n        // console.log(inactiveEffects.length)\n        // console.log(activeEffects.length)\n\n\n        var strongestEffect = activeEffects\n            .filter(e => e.active)\n            .reduce((prev, current) => (prev.magnitude > current.magnitude) ? prev : current, 0);\n\n        if (strongestEffect) potionName = strongestEffect.name + \" Potion\"\n\n        if (activeEffects.length > 1) potionName = \"Mixed \" + potionName\n\n        //find colours\n        //awaiting colour mixing function\n        var colour = [4, 3, 2, 1]\n        // activeEffects\n        //     .map(e => e.colour)\n        //     .filter(e => e)\n        // .reduce((a, b) => Color(a).mix(Color(b)), 0)\n\n        // if (!colour) colour = inactiveEffects\n        //     .map(e => e.colour)\n        //     .filter(e => e)\n        //     .reduce((a, b) => Color(a).mix(Color(b)), 0)\n\n\n\n\n        var properties = activeEffects.concat(inactiveEffects)\n            .map(e => e.substanceProperty)\n            .filter(e => e)\n            .sort()\n            .slice(0, 3)\n            .unique()\n\n        var newPotion = new Component(potionName,\n            activeEffects.concat(inactiveEffects),\n            colour,\n            properties\n\n        )\n        newPotion.updateComplexity(Math.min.apply(Math, presentEffects.map(e => e.complexity)))\n        return newPotion\n\n    }\n\n    createPotion(productionModifiers, ingredientNames) {\n\n        var m = ingredientNames.map(i => this.findComponent(i))\n        m = this.findCommonEffects(...m)\n        m = this.validateEffects(productionModifiers, m)\n        m = this.calculateEffectPotency(m)\n        m = this.finalisePotion(m)\n        return this.registerComponent(m)\n\n\n    }\n\n\n    makeDataSet() {\n        console.log(\"makeDataSet\")\n        var generationMemory = {}\n        var conditions = {\n            addProductionRequirements: (effect) => {\n                if ((effect.complexity > 2) && (effect.complexity < 4)) {\n                    effect.production = this.data.productionRequirements.slice(0, 3 + effect.complexity).randomElement()\n                }\n\n                if (effect.complexity >= 4) {\n                    effect.production = this.data.productionRequirements.slice(2, this.data.productionRequirements.length).randomElement()\n                }\n\n                return effect\n            },\n\n            addSubstanceProperties: (effect) => {\n\n                if (effect.complexity < 3 && effect.complexity > 1) {\n                    effect.substanceProperty = this.data.substanceProperties\n                        .slice(0, 5).randomElement()\n                }\n                if (effect.complexity >= 3) {\n                    effect.substanceProperty = this.data.substanceProperties.randomElement()\n                }\n                return effect\n            },\n\n            addColour: (effect) => ({ ...effect, colour: generateColour() })\n\n        }\n        //update ingrediants \n        this.data.ingredients\n            // .slice(0, 10)\n            .map(ingredient => {\n                // console.log(ingredient)\n\n                ingredient.effects = ingredient.effects.map((effect, i, a) => {\n\n                    //merge objects\n                    effect = {\n                        ...effect,\n                        ...this.data.effects.find(e => e.originalName === effect.name),\n\n                        //add colours\n\n                    }\n\n                    //apply condions\n                    Object.keys(conditions).forEach(c => effect = conditions[c](effect))\n\n                    generationMemory[effect.name] = (generationMemory[effect.name] ? [...generationMemory[effect.name], effect.magnitude] : [effect.magnitude])\n                    // console.log(effect)\n                    return effect\n\n                })\n                return ingredient\n\n            })\n            //calculate maximum strength\n            .map((ingredient, i, a) => ({ ...ingredient,\n                effects: ingredient.effects.map(e => ({ ...e,\n                    maxMagnitude: generationMemory[e.name]\n                        .sort((a, b) => b - a, 0)\n                        .slice(0, this.options.maxComponents)\n                        .reduce((a, b) => a + b, 0)\n\n                }))\n            }))\n            .map(i => this.registerComponent(new Component(i.name, i.effects)))\n        delete this.data.ingredients\n        console.log(\"makeDataSet complete\", this.data.components.length)\n        return this\n    }\n\n}\n\n\n\nfunction tests(seed) {\n    var pm = new PotionMaster({\n        baseData: originalDataSet,\n        effects: effects,\n        substanceProperties: substanceProperties,\n        productionRequirements: productionRequirements,\n        options: options,\n        seed: seed,\n    })\n\n\n\n\n\n    var explosivePotion = [\n        \"Beehive Husk\",\n        \"Ash Creep Cluster\",\n    ]\n\n    var corruptionPotion = [\n        \"Nordic Barnacle\",\n        \"Tinder Polypore Cap\"\n    ]\n\n\n\n    var productionEffects = [\n        \"Crushing\",\n        \"Disolve in water\",\n        \"philosophers stone\"\n    ]\n\n\n    var components = [\n        pm.createPotion(productionEffects, explosivePotion),\n        pm.createPotion(productionEffects, corruptionPotion)\n    ]\n\n    console.log(components[0], components[1])\n\n    // console.log(pm.data.components.reverse().slice(0,3))\n\n    var invis = pm.createPotion(productionEffects, components)\n\n    return pm.createPotion(productionEffects, [invis, invis])\n}\n\n\n\nexport default PotionMaster\n\n//","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport PotionMaster from  './potion-gen/update.js'\nimport './potion-gen/caco-ingredients.json' \n\n\nvar pm = new PotionMaster(1)\nconsole.log( pm.data.components[0])\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n      haha im posting on the internet!\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}